{
  "name": "chatsuite",
  "version": "0.0.0",
  "license": "MIT",
  "private": true,
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "docker:client-app": "pnpm nx run client-app:serve --host=0.0.0.0",
    "docker:api-customer-service": "pnpm nx run api-customer-service:serve --host=0.0.0.0",
    "docker:client:qa:up": "cross-env NX_APP_ENV=qa docker-compose -f ./docker-compose.client-app.yaml up",
    "docker:client:dev:up": "cross-env NX_APP_ENV=dev docker-compose -f ./docker-compose.client-app.yaml up",
    "docker:workspace:host:up": "cross-env NX_APP_ENV=host docker-compose -f ./docker-compose.yaml up",
    "docker:workspace:qa:up": "cross-env NX_APP_ENV=qa docker-compose -f ./docker-compose.yaml up",
    "docker:workspace:dev:up": "cross-env NX_APP_ENV=dev docker-compose -f ./docker-compose.yaml up",
    "docker:workspace:up": "cross-env NX_APP_ENV=$(node tools/dev-scripts/cmd-resolve-env.js) docker-compose -f ./docker-compose.yaml up",
    "docker:up": "pnpm docker:workspace:up",
    "docker:down": "docker-compose -f ./docker-compose.yaml down",
    "docker:build": "docker-compose -f ./docker-compose.yaml build",
    "docker:n8n:build": "docker-compose -f ./docker-compose.yaml build n8n",
    "docker:n8n:logs": "docker-compose -f ./docker-compose.yaml logs -f n8n",
    "docker:n8n:restart": "docker-compose -f ./docker-compose.yaml restart n8n",
    "check": "pnpm check:node-modules && npm run check:dependencies",
    "check:node-modules": "node ./tools/dev-scripts/cmd-check-node-modules.js",
    "check:dependencies": "node ./tools/dev-scripts/cmd-check-dependencies.js",
    "clean:node-modules": "bash ./tools/dev-scripts/cmd-clean-node-modules.sh",
    "start": "pnpm docker:workspace:up",
    "start:client:qa": "pnpm check && pnpm docker:client:qa:up",
    "start:client:dev": "pnpm check && pnpm docker:client:dev:up",
    "start:workspace:host": "pnpm check && pnpm docker:workspace:host:up",
    "start:workspace:qa": "pnpm check && pnpm docker:workspace:qa:up",
    "start:workspace:dev": "pnpm check && pnpm docker:workspace:dev:up",
    "start:workspace": "pnpm check && pnpm docker:workspace:up",
    "stop": "pnpm docker:down",
    "stop:prune": "pnpm docker:down --rmi=all --volumes --remove-orphans && node ./tools/dev-scripts/cmd-prune.js",
    "nx": "nx",
    "nx:start": "pnpm check:dependencies --only=node && dotenv -e .env -- pnpm nx serve",
    "nx:build": "pnpm check:dependencies --only=node && dotenv -e .env -- pnpm nx run-many --target=build --all",
    "nx:test": "pnpm check:dependencies --only=node && dotenv -e .env -- pnpm nx run-many --target=test --all",
    "nx:test:affected": "pnpm check:dependencies --only=node && dotenv -e .env -- pnpm nx affected --target=test",
    "nx:migrate:next": "pnpm check:dependencies --only=node && dotenv -e .env -- pnpm nx migrate next",
    "nx:migrate:run": "pnpm check:dependencies --only=node && pnpm install --no-frozen-lockfile && dotenv -e .env -- pnpm nx migrate --run-migrations",
    "env:show": "echo \"Current environment: $(node tools/dev-scripts/cmd-resolve-env.js)\"",
    "env:verify": "bash ./tools/dev-scripts/cmd-verify-security.sh",
  "env:set:dev": "printf '%s\\n' \"# ChatSuite Environment Configuration\" \"# This sets which environment template to use from config/env/\" \"NX_APP_ENV=dev\" > .env && pnpm env:show",
  "env:set:qa": "printf '%s\\n' \"# ChatSuite Environment Configuration\" \"# This sets which environment template to use from config/env/\" \"NX_APP_ENV=qa\" > .env && pnpm env:show",
  "env:set:host": "printf '%s\\n' \"# ChatSuite Environment Configuration\" \"# This sets which environment template to use from config/env/\" \"NX_APP_ENV=host\" > .env && pnpm env:show",
    "env:test": "bash ./tools/dev-scripts/cmd-test-env-config.sh",
    "rebuild": "bash ./tools/dev-scripts/cmd-rebuild.sh",
    "test": "bash ./tools/dev-scripts/cmd-test.sh"
  },
  "devDependencies": {
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.0",
    "@nx/cypress": "21.3.1",
    "@nx/eslint-plugin": "21.3.1",
    "@nx/jest": "21.3.1",
    "@nx/js": "21.3.1",
    "@nx/linter": "19.8.4",
    "@nx/nest": "21.3.1",
    "@nx/node": "21.3.1",
    "@nx/react": "21.3.1",
    "@nx/web": "21.3.2",
    "@nx/webpack": "^21.3.2",
    "@nx/workspace": "21.3.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.10",
    "@semantic-release/exec": "^6.0.3",
    "@svgr/webpack": "^6.5.1",
    "@swc-node/register": "~1.9.1",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "~0.5.11",
    "@testing-library/react": "13.4.0",
    "@types/jest": "29.4.4",
    "@types/node": "~18.16.9",
    "@types/react": "18.0.25",
    "@types/react-dom": "18.0.9",
    "@types/react-is": "17.0.3",
    "@types/react-router-dom": "5.3.3",
    "@types/styled-components": "5.1.26",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "5.59.6",
    "@typescript-eslint/parser": "8.37.0",
    "autoprefixer": "10.4.13",
    "babel-jest": "29.4.3",
    "babel-plugin-styled-components": "1.10.7",
    "calver": "^22.8.4",
    "cross-env": "7.0.3",
    "cross-spawn": "7.0.3",
    "dotenv-cli": "^10.0.0",
    "eslint": "~9.31.0",
    "eslint-config-prettier": "10.1.8",
    "eslint-plugin-cypress": "^2.10.3",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsx-a11y": "6.6.1",
    "eslint-plugin-react": "7.31.11",
    "eslint-plugin-react-hooks": "4.6.0",
    "http-server": "^14.1.1",
    "jest": "29.4.3",
    "jest-environment-jsdom": "29.4.3",
    "jest-environment-node": "^30.0.2",
    "nx": "21.3.1",
    "postcss": "8.4.21",
    "postcss-import": "15.0.0",
    "prettier": "^2.6.2",
    "prettier-plugin-prisma": "^4.13.0",
    "prisma": "^4.14.1",
    "react-refresh": "^0.14.0",
    "semantic-release": "^19.0.5",
    "supertest": "^7.1.4",
    "tailwindcss": "3.2.4",
    "ts-jest": "29.1.0",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typescript": "~5.8.2",
    "url-loader": "^4.1.1",
    "webpack-cli": "^5.1.4",
    "yargs": "^17.5.1"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.1",
    "@nestjs/common": "^11.0.0",
    "@nestjs/core": "^11.0.0",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@types/express": "^5.0.3",
    "axios": "^1.10.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "express": "^5.1.0",
    "http-proxy-middleware": "^3.0.5",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.0"
  }
}
